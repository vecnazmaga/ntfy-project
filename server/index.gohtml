{{- /*gotype: heckel.io/ntfy/server.indexPage*/ -}}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">

    <title>ntfy.sh | PUT/POST push notifications to your phone</title>
    <link rel="stylesheet" href="static/css/app.css" type="text/css">

    <!-- Mobile view -->
    <meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="HandheldFriendly" content="true">

    <!-- Mobile browsers, background color -->
    <meta name="theme-color" content="#317f6f">
    <meta name="msapplication-navbutton-color" content="#317f6f">
    <meta name="apple-mobile-web-app-status-bar-style" content="#317f6f">

    <!-- Favicon, see favicon.io -->
    <link rel="icon" type="image/png" href="static/img/favicon.png">

    <!-- Previews in Google, Slack, WhatsApp, etc. -->
    <meta property="og:type" content="website" />
    <meta property="og:locale" content="en_US" />
    <meta property="og:site_name" content="ntfy.sh" />
    <meta property="og:title" content="ntfy.sh | send push notifications to your phone via simple PUT/POST requests" />
    <meta property="og:description" content="ntfy is a simple HTTP-based pub-sub notification service. It allows you to send desktop notifications via scripts from any computer, entirely without signup or cost. Made with ‚ù§ by Philipp C. Heckel, Apache License 2.0, source at https://heckel.io/ntfy." />
    <meta property="og:image" content="/static/img/ntfy.png" />
    <meta property="og:url" content="https://ntfy.sh" />
{{if .Topic}}
    <!-- Never index topic page -->
    <meta name="robots" content="noindex, nofollow" />
{{end}}
</head>
<body>

<nav id="header">
    <div id="headerBox">
        <img id="logo" src="static/img/ntfy.png" alt="logo"/>
        <div id="name">ntfy.sh</div>
        <ol>
            <li><a href="docs/">Getting started</a></li>
            <li><a href="docs/subscribe/phone/">Android/iOS</a></li>
            <li><a href="docs/publish/">API</a></li>
            <li><a href="docs/install/">Self-hosting</a></li>
        </ol>
    </div>
</nav>
<div id="main"{{if .Topic}} style="display: none"{{end}}>
    <h1>Send push notifications to your phone or desktop via PUT/POST</h1>
    <p>
        <b>ntfy</b> (pronounce: <i>notify</i>) is a simple HTTP-based <a href="https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern">pub-sub</a> notification service.
        It allows you to send notifications to your phone or desktop via scripts from any computer,
        entirely <b>without signup, cost or setup</b>. It's also <a href="https://github.com/binwiederhier/ntfy">open source</a> if you want to run your own.
    </p>
    <div id="screenshots">
        <a href="static/img/screenshot-curl.png"><img src="static/img/screenshot-curl.png"/></a>
        <a href="static/img/screenshot-web-detail.png"><img src="static/img/screenshot-web-detail.png"/></a>
        <span class="nowrap">
            <a href="static/img/screenshot-phone-main.jpg"><img src="static/img/screenshot-phone-main.jpg"/></a>
            <a href="static/img/screenshot-phone-detail.jpg"><img src="static/img/screenshot-phone-detail.jpg"/></a>
            <a href="static/img/screenshot-phone-notification.jpg"><img src="static/img/screenshot-phone-notification.jpg"/></a>
        </span>
    </div>
    <p>
        There are many ways to use it: Notify yourself when a build finishes, when an rsync is done or a backup fails,
        or know when somebody logs into your server. There are <a href="#examples">many more examples</a>, endless possibilities üòÄ.
    </p>

    <h2 id="publish" class="anchor">Publishing messages</h2>
    <p>
        Publishing messages can be done via PUT or POST. Topics are created on the fly by subscribing or publishing to them.
        Because there is no sign-up, <b>the topic is essentially a password</b>, so pick something that's not easily guessable.
    </p>
    <p class="smallMarginBottom">
        Here's an example showing how to publish a message using a POST request (via <tt>curl -d</tt>):
    </p>
    <code>
        curl -d "Backup successful üòÄ" <span class="ntfyUrl">ntfy.sh</span>/mytopic
    </code>
    <p class="smallMarginBottom">
        There are <a href="#other-features">more features</a> related to publishing messages: You can set a
        <a href="#priority">notification priority</a>, a <a href="#title">title</a>, and <a href="#tags">tag messages</a>.
        Here's an example using all of them:
    </p>
    <code>
        curl \<br/>
        &nbsp;&nbsp;-H "Title: Unauthorized access detected" \<br/>
        &nbsp;&nbsp;-H "Priority: urgent" \<br/>
        &nbsp;&nbsp;-H "Tags: warning,skull" \<br/>
        &nbsp;&nbsp;-d "Remote access to $(hostname) detected. Act right away." \<br/>
        &nbsp;&nbsp;<span class="ntfyUrl">ntfy.sh</span>/mytopic
    </code>

    <h2 id="subscribe" class="anchor">Subscribe to a topic</h2>
    <p>
        You can create and subscribe to a topic either <a href="docs/subscribe/phone/">using your phone</a>,
        in <a href="docs/subscribe/web/">this web UI</a>, or in your own app by <a href="docs/subscribe/api/">subscribing via the API</a>.
    </p>

    <div id="subscribeBox">
        <h3 id="subscribe-web" class="anchor">Subscribe in this Web UI</h3>
        <p id="error"></p>
        <p>
            Subscribe to topics here and receive messages as <b>desktop notification</b>. Topics are not password-protected,
            so choose a name that's not easy to guess. Once subscribed, you can publish messages via PUT/POST.
        </p>
        <form id="subscribeForm">
            <p>
                <b>Topic:</b><br/>
                <input type="text" id="topicField" autocomplete="off" placeholder="Topic name, e.g. phil_alerts" maxlength="64" pattern="[-_A-Za-z0-9]{1,64}" />
                <button id="subscribeButton">Subscribe</button>
            </p>
            <p id="topicsHeader"><b>Subscribed topics:</b></p>
            <ul id="topicsList"></ul>
        </form>
        <audio id="notifySound" src="static/sound/mixkit-message-pop-alert-2354.mp3"></audio>
    </div>

    <h3 id="subscribe-phone" class="anchor">Subscribe from your phone</h3>
    <p>
        You can use the <a href="https://play.google.com/store/apps/details?id=io.heckel.ntfy">Ntfy Android App</a>
        to receive notifications directly on your phone. Just like the server, this app is also <a href="https://github.com/binwiederhier/ntfy-android">open source</a>.
        Since I don't have an iPhone or a Mac, I didn't make an iOS app yet. I'd be awesome if <a href="https://github.com/binwiederhier/ntfy/issues/4">someone else could help out</a>.
    </p>
    <p>
        <a href="https://play.google.com/store/apps/details?id=io.heckel.ntfy"><img src="static/img/badge-googleplay.png"></a>
        <a href="https://github.com/binwiederhier/ntfy/issues/4"><img src="static/img/badge-appstore.png"></a>
    </p>

    <h3 id="subscribe-api" class="anchor">Subscribe via your app, or via the CLI</h3>
    <p class="smallMarginBottom">
        Using <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventSource">EventSource</a> in JS, you can consume
        notifications like this (see <a href="example.html">live example</a>):
    </p>
    <code>
        const eventSource = new EventSource('<span class="ntfyProtocol">https://</span><span class="ntfyUrl">ntfy.sh</span>/mytopic/sse');<br/>
        eventSource.onmessage = (e) => {<br/>
        &nbsp;&nbsp;// Do something with e.data<br/>
        };
    </code>
    <p class="smallMarginBottom">
        You can also use the same <tt>/sse</tt> endpoint via <tt>curl</tt> or any other HTTP library:
    </p>
    <code>
        $ curl -s <span class="ntfyUrl">ntfy.sh</span>/mytopic/sse<br/>
        event: open<br/>
        data: {"id":"weSj9RtNkj","time":1635528898,"event":"open","topic":"mytopic"}<br/><br/>

        data: {"id":"p0M5y6gcCY","time":1635528909,"event":"message","topic":"mytopic","message":"Hi!"}<br/><br/>

        event: keepalive<br/>
        data: {"id":"VNxNIg5fpt","time":1635528928,"event":"keepalive","topic":"test"}
    </code>
    <p class="smallMarginBottom">
        To consume JSON instead, use the <tt>/json</tt> endpoint, which prints one message per line:
    </p>
    <code>
        $ curl -s <span class="ntfyUrl">ntfy.sh</span>/mytopic/json<br/>
        {"id":"SLiKI64DOt","time":1635528757,"event":"open","topic":"mytopic"}<br/>
        {"id":"hwQ2YpKdmg","time":1635528741,"event":"message","topic":"mytopic","message":"Hi!"}<br/>
        {"id":"DGUDShMCsc","time":1635528787,"event":"keepalive","topic":"mytopic"}
    </code>
    <p class="smallMarginBottom">
        Or use the <tt>/raw</tt> endpoint if you need something super simple (empty lines are keepalive messages):
    </p>
    <code>
        $ curl -s <span class="ntfyUrl">ntfy.sh</span>/mytopic/raw<br/>
        <br/>
        This is a notification<br/>
        And another one with a smiley face üòÄ
    </code>

    <center id="ironicCenterTagDontFreakOut"><i>Made with ‚ù§Ô∏è by <a href="https://heckel.io">Philipp C. Heckel</a></i></center>
</div>
<div id="detail"{{if not .Topic}} style="display: none"{{end}}>
    <div id="detailMain">
        <button id="detailCloseButton"><img src="static/img/close.svg"/></button>
        <h1><span id="detailTitle"></span></h1>
        <p class="smallMarginBottom">
            <b>ntfy</b> is a simple HTTP-based pub-sub notification service. This is a ntfy topic.
            To send notifications to it, simply PUT or POST to the topic URL. Here's an example using <tt>curl</tt>:
        </p>
        <code>
            curl -d "Backup failed" <span id="detailTopicUrl">ntfy.sh/topic</span>
        </code>
        <p id="detailNotificationsDisallowed">
            If you'd like to receive desktop notifications when new messages arrive on this topic, you have
            <a href="#" onclick="return requestPermission()">grant the browser permission</a> to show notifications.
            Click the link to do so.
        </p>
        <p class="smallMarginBottom">
            <b>Recent notifications</b> (cached for {{.CacheDuration}}):
        </p>
        <p id="detailNoNotifications">
            <i>You haven't received any notifications for this topic yet.</i>
        </p>
        <div id="detailEventsList"></div>
    </div>
</div>
<div id="lightbox" class="lightbox"></div>
<script src="static/js/emoji.js"></script>
<script src="static/js/app.js"></script>
</body>
</html>
